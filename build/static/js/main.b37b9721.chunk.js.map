{"version":3,"sources":["api/fetchWeather.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","App","useState","setquery","weather","setweather","search","e","key","className","type","placeholder","value","onChange","target","onKeyPress","main","name","sys","country","Math","round","temp","src","icon","alt","description","ReactDOM","render","document","getElementById"],"mappings":"wNAKaA,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACHC,IAAMC,IAJnB,kDAI4B,CAChCC,OAAO,CACHC,EAAGL,EACHM,MAAO,SACPC,MAPI,sCAEY,uBACjBC,EADiB,EACjBA,KADiB,kBASjBA,GATiB,2CAAH,sD,eCiDVC,MAjDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNV,EADM,KACCW,EADD,OAEiBD,mBAAS,IAF1B,mBAENE,EAFM,KAEGC,EAFH,KAIPC,EAAM,uCAAG,WAAOC,GAAP,eAAAd,EAAA,yDACA,SAATc,EAAEC,IADO,gCAEQjB,EAAaC,GAFrB,OAELQ,EAFK,OAIXK,EAAWL,GACXG,EAAS,IALE,2CAAH,sDASZ,OACE,sBAAKM,UAAU,iBAAf,UACE,uBACEC,KAAK,OACLD,UAAU,SACVE,YAAY,0BACZC,MAAOpB,EACPqB,SAAU,SAACN,GAAD,OAAOJ,EAASI,EAAEO,OAAOF,QACnCG,WAAYT,IAGbF,EAAQY,MACP,sBAAKP,UAAU,OAAf,UACE,qBAAIA,UAAU,YAAd,UACE,+BAAOL,EAAQa,OACf,qBAAKR,UAAU,MAAf,SAAsBL,EAAQc,IAAIC,aAGpC,sBAAKV,UAAU,YAAf,UACGW,KAAKC,MAAMjB,EAAQY,KAAKM,MACzB,2CAEF,sBAAKb,UAAU,OAAf,UACE,qBACEA,UAAU,YACVc,IAAG,4CAAuCnB,EAAQA,QAAQ,GAAGoB,KAA1D,WACHC,IAAKrB,EAAQA,QAAQ,GAAGsB,cAE1B,4BAAItB,EAAQA,QAAQ,GAAGsB,wBCxCnCC,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.b37b9721.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\r\nconst API_KEY = 'f33a484cf794d08d0148764789aaba32';\r\n\r\nexport const fetchWeather = async (query) => {\r\n    const {data} = await axios.get(URL, {\r\n        params:{\r\n            q: query,\r\n            units: 'metric',\r\n            APPID: API_KEY,\r\n        }\r\n    });\r\n\r\n    return data;\r\n}","import { useState } from \"react\";\n\nimport { fetchWeather } from \"./api/fetchWeather\";\nimport \"./app.css\";\n\nfunction App() {\n  const [query, setquery] = useState(\"\");\n  const [weather, setweather] = useState({});\n\n  const search = async (e) => {\n    if (e.key == \"Enter\") {\n      const data = await fetchWeather(query);\n\n      setweather(data);\n      setquery(\"\");\n    }\n  };\n\n  return (\n    <div className=\"main-container\">\n      <input\n        type=\"text\"\n        className=\"search\"\n        placeholder=\"Enter City Name Here...\"\n        value={query}\n        onChange={(e) => setquery(e.target.value)}\n        onKeyPress={search}\n      />\n\n      {weather.main && (\n        <div className=\"city\">\n          <h2 className=\"city-name\">\n            <span>{weather.name}</span>\n            <sup className=\"sup\">{weather.sys.country}</sup>\n          </h2>\n\n          <div className=\"city-temp\">\n            {Math.round(weather.main.temp)}\n            <sup>&deg;C</sup>\n          </div>\n          <div className=\"info\">\n            <img\n              className=\"city-icon\"\n              src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n              alt={weather.weather[0].description}\n            />\n            <p>{weather.weather[0].description}</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n \n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}